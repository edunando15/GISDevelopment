// <auto-generated />
using System.Collections.Generic;
using GISDevelopment.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GISDevelopment.Migrations
{
    [DbContext(typeof(ItalyCentreContext))]
    partial class ItalyCentreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "hstore");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pgrouting");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GISDevelopment.Models.AnconaRoad", b =>
                {
                    b.Property<double?>("Cost")
                        .HasColumnType("double precision")
                        .HasColumnName("cost");

                    b.Property<string>("Highway")
                        .HasColumnType("text")
                        .HasColumnName("highway");

                    b.Property<string>("IntRef")
                        .HasColumnType("text")
                        .HasColumnName("int_ref");

                    b.Property<string>("LocName")
                        .HasColumnType("text")
                        .HasColumnName("loc_name");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("NatRef")
                        .HasColumnType("text")
                        .HasColumnName("nat_ref");

                    b.Property<long?>("OsmId")
                        .HasColumnType("bigint")
                        .HasColumnName("osm_id");

                    b.Property<string>("Ref")
                        .HasColumnType("text")
                        .HasColumnName("ref");

                    b.Property<long?>("Source")
                        .HasColumnType("bigint")
                        .HasColumnName("source");

                    b.Property<Dictionary<string, string>>("Tags")
                        .HasColumnType("hstore")
                        .HasColumnName("tags");

                    b.Property<long?>("Target")
                        .HasColumnType("bigint")
                        .HasColumnName("target");

                    b.Property<Geometry>("Way")
                        .HasColumnType("geometry")
                        .HasColumnName("way");

                    b.HasIndex(new[] { "OsmId" }, "ancona_roads_osm_id_idx");

                    b.HasIndex(new[] { "Source" }, "ancona_roads_source_idx");

                    b.HasIndex(new[] { "Target" }, "ancona_roads_target_idx");

                    b.HasIndex(new[] { "Way" }, "ancona_roads_way_idx");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex(new[] { "Way" }, "ancona_roads_way_idx"), "gist");

                    b.ToTable("ancona_roads", (string)null);
                });

            modelBuilder.Entity("GISDevelopment.Models.AnconaRoadsVerticesPgr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("Chk")
                        .HasColumnType("integer")
                        .HasColumnName("chk");

                    b.Property<int?>("Cnt")
                        .HasColumnType("integer")
                        .HasColumnName("cnt");

                    b.Property<int?>("Ein")
                        .HasColumnType("integer")
                        .HasColumnName("ein");

                    b.Property<int?>("Eout")
                        .HasColumnType("integer")
                        .HasColumnName("eout");

                    b.Property<Point>("TheGeom")
                        .HasColumnType("geometry(Point,3857)")
                        .HasColumnName("the_geom");

                    b.HasKey("Id")
                        .HasName("ancona_roads_vertices_pgr_pkey");

                    b.HasIndex(new[] { "TheGeom" }, "ancona_roads_vertices_pgr_the_geom_idx");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex(new[] { "TheGeom" }, "ancona_roads_vertices_pgr_the_geom_idx"), "gist");

                    b.ToTable("ancona_roads_vertices_pgr", (string)null);
                });

            modelBuilder.Entity("GISDevelopment.Models.Monument", b =>
                {
                    b.Property<long>("OsmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("osm_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("OsmId"));

                    b.Property<string>("Access")
                        .HasColumnType("text")
                        .HasColumnName("access");

                    b.Property<string>("AddrHousename")
                        .HasColumnType("text")
                        .HasColumnName("addr:housename");

                    b.Property<string>("AddrHousenumber")
                        .HasColumnType("text")
                        .HasColumnName("addr:housenumber");

                    b.Property<string>("AddrInterpolation")
                        .HasColumnType("text")
                        .HasColumnName("addr:interpolation");

                    b.Property<string>("AdminLevel")
                        .HasColumnType("text")
                        .HasColumnName("admin_level");

                    b.Property<string>("Aerialway")
                        .HasColumnType("text")
                        .HasColumnName("aerialway");

                    b.Property<string>("Aeroway")
                        .HasColumnType("text")
                        .HasColumnName("aeroway");

                    b.Property<string>("Amenity")
                        .HasColumnType("text")
                        .HasColumnName("amenity");

                    b.Property<string>("Area")
                        .HasColumnType("text")
                        .HasColumnName("area");

                    b.Property<string>("Barrier")
                        .HasColumnType("text")
                        .HasColumnName("barrier");

                    b.Property<string>("Bicycle")
                        .HasColumnType("text")
                        .HasColumnName("bicycle");

                    b.Property<string>("Boundary")
                        .HasColumnType("text")
                        .HasColumnName("boundary");

                    b.Property<string>("Brand")
                        .HasColumnType("text")
                        .HasColumnName("brand");

                    b.Property<string>("Bridge")
                        .HasColumnType("text")
                        .HasColumnName("bridge");

                    b.Property<string>("Building")
                        .HasColumnType("text")
                        .HasColumnName("building");

                    b.Property<string>("Capital")
                        .HasColumnType("text")
                        .HasColumnName("capital");

                    b.Property<string>("Construction")
                        .HasColumnType("text")
                        .HasColumnName("construction");

                    b.Property<string>("Covered")
                        .HasColumnType("text")
                        .HasColumnName("covered");

                    b.Property<string>("Culvert")
                        .HasColumnType("text")
                        .HasColumnName("culvert");

                    b.Property<string>("Cutting")
                        .HasColumnType("text")
                        .HasColumnName("cutting");

                    b.Property<string>("Denomination")
                        .HasColumnType("text")
                        .HasColumnName("denomination");

                    b.Property<string>("Disused")
                        .HasColumnType("text")
                        .HasColumnName("disused");

                    b.Property<string>("Ele")
                        .HasColumnType("text")
                        .HasColumnName("ele");

                    b.Property<string>("Embankment")
                        .HasColumnType("text")
                        .HasColumnName("embankment");

                    b.Property<string>("Foot")
                        .HasColumnType("text")
                        .HasColumnName("foot");

                    b.Property<string>("GeneratorSource")
                        .HasColumnType("text")
                        .HasColumnName("generator:source");

                    b.Property<string>("Harbour")
                        .HasColumnType("text")
                        .HasColumnName("harbour");

                    b.Property<string>("Highway")
                        .HasColumnType("text")
                        .HasColumnName("highway");

                    b.Property<string>("Historic")
                        .HasColumnType("text")
                        .HasColumnName("historic");

                    b.Property<string>("Horse")
                        .HasColumnType("text")
                        .HasColumnName("horse");

                    b.Property<string>("Intermittent")
                        .HasColumnType("text")
                        .HasColumnName("intermittent");

                    b.Property<string>("Junction")
                        .HasColumnType("text")
                        .HasColumnName("junction");

                    b.Property<string>("Landuse")
                        .HasColumnType("text")
                        .HasColumnName("landuse");

                    b.Property<string>("Layer")
                        .HasColumnType("text")
                        .HasColumnName("layer");

                    b.Property<string>("Leisure")
                        .HasColumnType("text")
                        .HasColumnName("leisure");

                    b.Property<string>("Lock")
                        .HasColumnType("text")
                        .HasColumnName("lock");

                    b.Property<string>("ManMade")
                        .HasColumnType("text")
                        .HasColumnName("man_made");

                    b.Property<string>("Military")
                        .HasColumnType("text")
                        .HasColumnName("military");

                    b.Property<string>("Motorcar")
                        .HasColumnType("text")
                        .HasColumnName("motorcar");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Natural")
                        .HasColumnType("text")
                        .HasColumnName("natural");

                    b.Property<string>("Office")
                        .HasColumnType("text")
                        .HasColumnName("office");

                    b.Property<string>("Oneway")
                        .HasColumnType("text")
                        .HasColumnName("oneway");

                    b.Property<string>("Operator")
                        .HasColumnType("text")
                        .HasColumnName("operator");

                    b.Property<string>("Place")
                        .HasColumnType("text")
                        .HasColumnName("place");

                    b.Property<string>("Population")
                        .HasColumnType("text")
                        .HasColumnName("population");

                    b.Property<string>("Power")
                        .HasColumnType("text")
                        .HasColumnName("power");

                    b.Property<string>("PowerSource")
                        .HasColumnType("text")
                        .HasColumnName("power_source");

                    b.Property<string>("PublicTransport")
                        .HasColumnType("text")
                        .HasColumnName("public_transport");

                    b.Property<string>("Railway")
                        .HasColumnType("text")
                        .HasColumnName("railway");

                    b.Property<string>("Ref")
                        .HasColumnType("text")
                        .HasColumnName("ref");

                    b.Property<string>("Religion")
                        .HasColumnType("text")
                        .HasColumnName("religion");

                    b.Property<string>("Route")
                        .HasColumnType("text")
                        .HasColumnName("route");

                    b.Property<string>("Service")
                        .HasColumnType("text")
                        .HasColumnName("service");

                    b.Property<string>("Shop")
                        .HasColumnType("text")
                        .HasColumnName("shop");

                    b.Property<string>("Sport")
                        .HasColumnType("text")
                        .HasColumnName("sport");

                    b.Property<string>("Surface")
                        .HasColumnType("text")
                        .HasColumnName("surface");

                    b.Property<Dictionary<string, string>>("Tags")
                        .HasColumnType("hstore")
                        .HasColumnName("tags");

                    b.Property<string>("Toll")
                        .HasColumnType("text")
                        .HasColumnName("toll");

                    b.Property<string>("Tourism")
                        .HasColumnType("text")
                        .HasColumnName("tourism");

                    b.Property<string>("TowerType")
                        .HasColumnType("text")
                        .HasColumnName("tower:type");

                    b.Property<string>("Tunnel")
                        .HasColumnType("text")
                        .HasColumnName("tunnel");

                    b.Property<string>("Water")
                        .HasColumnType("text")
                        .HasColumnName("water");

                    b.Property<string>("Waterway")
                        .HasColumnType("text")
                        .HasColumnName("waterway");

                    b.Property<Point>("Way")
                        .HasColumnType("geometry(Point,3857)")
                        .HasColumnName("way");

                    b.Property<string>("Wetland")
                        .HasColumnType("text")
                        .HasColumnName("wetland");

                    b.Property<string>("Width")
                        .HasColumnType("text")
                        .HasColumnName("width");

                    b.Property<string>("Wood")
                        .HasColumnType("text")
                        .HasColumnName("wood");

                    b.Property<int?>("ZOrder")
                        .HasColumnType("integer")
                        .HasColumnName("z_order");

                    b.HasKey("OsmId");

                    b.ToTable("Monument", (string)null);
                });

            modelBuilder.Entity("GISDevelopment.Models.Osm2pgsqlProperty", b =>
                {
                    b.Property<string>("Property")
                        .HasColumnType("text")
                        .HasColumnName("property");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("Property")
                        .HasName("osm2pgsql_properties_pkey");

                    b.ToTable("osm2pgsql_properties", (string)null);
                });

            modelBuilder.Entity("GISDevelopment.Models.PlaceOfWorship", b =>
                {
                    b.Property<long>("OsmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("osm_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("OsmId"));

                    b.Property<string>("Access")
                        .HasColumnType("text")
                        .HasColumnName("access");

                    b.Property<string>("AddrHousename")
                        .HasColumnType("text")
                        .HasColumnName("addr:housename");

                    b.Property<string>("AddrHousenumber")
                        .HasColumnType("text")
                        .HasColumnName("addr:housenumber");

                    b.Property<string>("AddrInterpolation")
                        .HasColumnType("text")
                        .HasColumnName("addr:interpolation");

                    b.Property<string>("AdminLevel")
                        .HasColumnType("text")
                        .HasColumnName("admin_level");

                    b.Property<string>("Aerialway")
                        .HasColumnType("text")
                        .HasColumnName("aerialway");

                    b.Property<string>("Aeroway")
                        .HasColumnType("text")
                        .HasColumnName("aeroway");

                    b.Property<string>("Amenity")
                        .HasColumnType("text")
                        .HasColumnName("amenity");

                    b.Property<string>("Area")
                        .HasColumnType("text")
                        .HasColumnName("area");

                    b.Property<string>("Barrier")
                        .HasColumnType("text")
                        .HasColumnName("barrier");

                    b.Property<string>("Bicycle")
                        .HasColumnType("text")
                        .HasColumnName("bicycle");

                    b.Property<string>("Boundary")
                        .HasColumnType("text")
                        .HasColumnName("boundary");

                    b.Property<string>("Brand")
                        .HasColumnType("text")
                        .HasColumnName("brand");

                    b.Property<string>("Bridge")
                        .HasColumnType("text")
                        .HasColumnName("bridge");

                    b.Property<string>("Building")
                        .HasColumnType("text")
                        .HasColumnName("building");

                    b.Property<string>("Capital")
                        .HasColumnType("text")
                        .HasColumnName("capital");

                    b.Property<string>("Construction")
                        .HasColumnType("text")
                        .HasColumnName("construction");

                    b.Property<string>("Covered")
                        .HasColumnType("text")
                        .HasColumnName("covered");

                    b.Property<string>("Culvert")
                        .HasColumnType("text")
                        .HasColumnName("culvert");

                    b.Property<string>("Cutting")
                        .HasColumnType("text")
                        .HasColumnName("cutting");

                    b.Property<string>("Denomination")
                        .HasColumnType("text")
                        .HasColumnName("denomination");

                    b.Property<string>("Disused")
                        .HasColumnType("text")
                        .HasColumnName("disused");

                    b.Property<string>("Ele")
                        .HasColumnType("text")
                        .HasColumnName("ele");

                    b.Property<string>("Embankment")
                        .HasColumnType("text")
                        .HasColumnName("embankment");

                    b.Property<string>("Foot")
                        .HasColumnType("text")
                        .HasColumnName("foot");

                    b.Property<string>("GeneratorSource")
                        .HasColumnType("text")
                        .HasColumnName("generator:source");

                    b.Property<string>("Harbour")
                        .HasColumnType("text")
                        .HasColumnName("harbour");

                    b.Property<string>("Highway")
                        .HasColumnType("text")
                        .HasColumnName("highway");

                    b.Property<string>("Historic")
                        .HasColumnType("text")
                        .HasColumnName("historic");

                    b.Property<string>("Horse")
                        .HasColumnType("text")
                        .HasColumnName("horse");

                    b.Property<string>("Intermittent")
                        .HasColumnType("text")
                        .HasColumnName("intermittent");

                    b.Property<string>("Junction")
                        .HasColumnType("text")
                        .HasColumnName("junction");

                    b.Property<string>("Landuse")
                        .HasColumnType("text")
                        .HasColumnName("landuse");

                    b.Property<string>("Layer")
                        .HasColumnType("text")
                        .HasColumnName("layer");

                    b.Property<string>("Leisure")
                        .HasColumnType("text")
                        .HasColumnName("leisure");

                    b.Property<string>("Lock")
                        .HasColumnType("text")
                        .HasColumnName("lock");

                    b.Property<string>("ManMade")
                        .HasColumnType("text")
                        .HasColumnName("man_made");

                    b.Property<string>("Military")
                        .HasColumnType("text")
                        .HasColumnName("military");

                    b.Property<string>("Motorcar")
                        .HasColumnType("text")
                        .HasColumnName("motorcar");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Natural")
                        .HasColumnType("text")
                        .HasColumnName("natural");

                    b.Property<string>("Office")
                        .HasColumnType("text")
                        .HasColumnName("office");

                    b.Property<string>("Oneway")
                        .HasColumnType("text")
                        .HasColumnName("oneway");

                    b.Property<string>("Operator")
                        .HasColumnType("text")
                        .HasColumnName("operator");

                    b.Property<string>("Place")
                        .HasColumnType("text")
                        .HasColumnName("place");

                    b.Property<string>("Population")
                        .HasColumnType("text")
                        .HasColumnName("population");

                    b.Property<string>("Power")
                        .HasColumnType("text")
                        .HasColumnName("power");

                    b.Property<string>("PowerSource")
                        .HasColumnType("text")
                        .HasColumnName("power_source");

                    b.Property<string>("PublicTransport")
                        .HasColumnType("text")
                        .HasColumnName("public_transport");

                    b.Property<string>("Railway")
                        .HasColumnType("text")
                        .HasColumnName("railway");

                    b.Property<string>("Ref")
                        .HasColumnType("text")
                        .HasColumnName("ref");

                    b.Property<string>("Religion")
                        .HasColumnType("text")
                        .HasColumnName("religion");

                    b.Property<string>("Route")
                        .HasColumnType("text")
                        .HasColumnName("route");

                    b.Property<string>("Service")
                        .HasColumnType("text")
                        .HasColumnName("service");

                    b.Property<string>("Shop")
                        .HasColumnType("text")
                        .HasColumnName("shop");

                    b.Property<string>("Sport")
                        .HasColumnType("text")
                        .HasColumnName("sport");

                    b.Property<string>("Surface")
                        .HasColumnType("text")
                        .HasColumnName("surface");

                    b.Property<Dictionary<string, string>>("Tags")
                        .HasColumnType("hstore")
                        .HasColumnName("tags");

                    b.Property<string>("Toll")
                        .HasColumnType("text")
                        .HasColumnName("toll");

                    b.Property<string>("Tourism")
                        .HasColumnType("text")
                        .HasColumnName("tourism");

                    b.Property<string>("TowerType")
                        .HasColumnType("text")
                        .HasColumnName("tower:type");

                    b.Property<string>("Tunnel")
                        .HasColumnType("text")
                        .HasColumnName("tunnel");

                    b.Property<string>("Water")
                        .HasColumnType("text")
                        .HasColumnName("water");

                    b.Property<string>("Waterway")
                        .HasColumnType("text")
                        .HasColumnName("waterway");

                    b.Property<Point>("Way")
                        .HasColumnType("geometry(Point,3857)")
                        .HasColumnName("way");

                    b.Property<string>("Wetland")
                        .HasColumnType("text")
                        .HasColumnName("wetland");

                    b.Property<string>("Width")
                        .HasColumnType("text")
                        .HasColumnName("width");

                    b.Property<string>("Wood")
                        .HasColumnType("text")
                        .HasColumnName("wood");

                    b.Property<int?>("ZOrder")
                        .HasColumnType("integer")
                        .HasColumnName("z_order");

                    b.HasKey("OsmId");

                    b.ToTable("PlaceOfWorship", (string)null);
                });

            modelBuilder.Entity("GISDevelopment.Models.PlanetOsmLine", b =>
                {
                    b.Property<string>("Access")
                        .HasColumnType("text")
                        .HasColumnName("access");

                    b.Property<string>("AddrHousename")
                        .HasColumnType("text")
                        .HasColumnName("addr:housename");

                    b.Property<string>("AddrHousenumber")
                        .HasColumnType("text")
                        .HasColumnName("addr:housenumber");

                    b.Property<string>("AddrInterpolation")
                        .HasColumnType("text")
                        .HasColumnName("addr:interpolation");

                    b.Property<string>("AdminLevel")
                        .HasColumnType("text")
                        .HasColumnName("admin_level");

                    b.Property<string>("Aerialway")
                        .HasColumnType("text")
                        .HasColumnName("aerialway");

                    b.Property<string>("Aeroway")
                        .HasColumnType("text")
                        .HasColumnName("aeroway");

                    b.Property<string>("Amenity")
                        .HasColumnType("text")
                        .HasColumnName("amenity");

                    b.Property<string>("Area")
                        .HasColumnType("text")
                        .HasColumnName("area");

                    b.Property<string>("Barrier")
                        .HasColumnType("text")
                        .HasColumnName("barrier");

                    b.Property<string>("Bicycle")
                        .HasColumnType("text")
                        .HasColumnName("bicycle");

                    b.Property<string>("Boundary")
                        .HasColumnType("text")
                        .HasColumnName("boundary");

                    b.Property<string>("Brand")
                        .HasColumnType("text")
                        .HasColumnName("brand");

                    b.Property<string>("Bridge")
                        .HasColumnType("text")
                        .HasColumnName("bridge");

                    b.Property<string>("Building")
                        .HasColumnType("text")
                        .HasColumnName("building");

                    b.Property<string>("Construction")
                        .HasColumnType("text")
                        .HasColumnName("construction");

                    b.Property<string>("Covered")
                        .HasColumnType("text")
                        .HasColumnName("covered");

                    b.Property<string>("Culvert")
                        .HasColumnType("text")
                        .HasColumnName("culvert");

                    b.Property<string>("Cutting")
                        .HasColumnType("text")
                        .HasColumnName("cutting");

                    b.Property<string>("Denomination")
                        .HasColumnType("text")
                        .HasColumnName("denomination");

                    b.Property<string>("Disused")
                        .HasColumnType("text")
                        .HasColumnName("disused");

                    b.Property<string>("Embankment")
                        .HasColumnType("text")
                        .HasColumnName("embankment");

                    b.Property<string>("Foot")
                        .HasColumnType("text")
                        .HasColumnName("foot");

                    b.Property<string>("GeneratorSource")
                        .HasColumnType("text")
                        .HasColumnName("generator:source");

                    b.Property<string>("Harbour")
                        .HasColumnType("text")
                        .HasColumnName("harbour");

                    b.Property<string>("Highway")
                        .HasColumnType("text")
                        .HasColumnName("highway");

                    b.Property<string>("Historic")
                        .HasColumnType("text")
                        .HasColumnName("historic");

                    b.Property<string>("Horse")
                        .HasColumnType("text")
                        .HasColumnName("horse");

                    b.Property<string>("Intermittent")
                        .HasColumnType("text")
                        .HasColumnName("intermittent");

                    b.Property<string>("Junction")
                        .HasColumnType("text")
                        .HasColumnName("junction");

                    b.Property<string>("Landuse")
                        .HasColumnType("text")
                        .HasColumnName("landuse");

                    b.Property<string>("Layer")
                        .HasColumnType("text")
                        .HasColumnName("layer");

                    b.Property<string>("Leisure")
                        .HasColumnType("text")
                        .HasColumnName("leisure");

                    b.Property<string>("Lock")
                        .HasColumnType("text")
                        .HasColumnName("lock");

                    b.Property<string>("ManMade")
                        .HasColumnType("text")
                        .HasColumnName("man_made");

                    b.Property<string>("Military")
                        .HasColumnType("text")
                        .HasColumnName("military");

                    b.Property<string>("Motorcar")
                        .HasColumnType("text")
                        .HasColumnName("motorcar");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Natural")
                        .HasColumnType("text")
                        .HasColumnName("natural");

                    b.Property<string>("Office")
                        .HasColumnType("text")
                        .HasColumnName("office");

                    b.Property<string>("Oneway")
                        .HasColumnType("text")
                        .HasColumnName("oneway");

                    b.Property<string>("Operator")
                        .HasColumnType("text")
                        .HasColumnName("operator");

                    b.Property<long?>("OsmId")
                        .HasColumnType("bigint")
                        .HasColumnName("osm_id");

                    b.Property<string>("Place")
                        .HasColumnType("text")
                        .HasColumnName("place");

                    b.Property<string>("Population")
                        .HasColumnType("text")
                        .HasColumnName("population");

                    b.Property<string>("Power")
                        .HasColumnType("text")
                        .HasColumnName("power");

                    b.Property<string>("PowerSource")
                        .HasColumnType("text")
                        .HasColumnName("power_source");

                    b.Property<string>("PublicTransport")
                        .HasColumnType("text")
                        .HasColumnName("public_transport");

                    b.Property<string>("Railway")
                        .HasColumnType("text")
                        .HasColumnName("railway");

                    b.Property<string>("Ref")
                        .HasColumnType("text")
                        .HasColumnName("ref");

                    b.Property<string>("Religion")
                        .HasColumnType("text")
                        .HasColumnName("religion");

                    b.Property<string>("Route")
                        .HasColumnType("text")
                        .HasColumnName("route");

                    b.Property<string>("Service")
                        .HasColumnType("text")
                        .HasColumnName("service");

                    b.Property<string>("Shop")
                        .HasColumnType("text")
                        .HasColumnName("shop");

                    b.Property<string>("Sport")
                        .HasColumnType("text")
                        .HasColumnName("sport");

                    b.Property<string>("Surface")
                        .HasColumnType("text")
                        .HasColumnName("surface");

                    b.Property<Dictionary<string, string>>("Tags")
                        .HasColumnType("hstore")
                        .HasColumnName("tags");

                    b.Property<string>("Toll")
                        .HasColumnType("text")
                        .HasColumnName("toll");

                    b.Property<string>("Tourism")
                        .HasColumnType("text")
                        .HasColumnName("tourism");

                    b.Property<string>("TowerType")
                        .HasColumnType("text")
                        .HasColumnName("tower:type");

                    b.Property<string>("Tracktype")
                        .HasColumnType("text")
                        .HasColumnName("tracktype");

                    b.Property<string>("Tunnel")
                        .HasColumnType("text")
                        .HasColumnName("tunnel");

                    b.Property<string>("Water")
                        .HasColumnType("text")
                        .HasColumnName("water");

                    b.Property<string>("Waterway")
                        .HasColumnType("text")
                        .HasColumnName("waterway");

                    b.Property<LineString>("Way")
                        .HasColumnType("geometry(LineString,3857)")
                        .HasColumnName("way");

                    b.Property<float?>("WayArea")
                        .HasColumnType("real")
                        .HasColumnName("way_area");

                    b.Property<string>("Wetland")
                        .HasColumnType("text")
                        .HasColumnName("wetland");

                    b.Property<string>("Width")
                        .HasColumnType("text")
                        .HasColumnName("width");

                    b.Property<string>("Wood")
                        .HasColumnType("text")
                        .HasColumnName("wood");

                    b.Property<int?>("ZOrder")
                        .HasColumnType("integer")
                        .HasColumnName("z_order");

                    b.HasIndex(new[] { "OsmId" }, "planet_osm_line_osm_id_idx");

                    b.HasIndex(new[] { "Way" }, "planet_osm_line_way_idx");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex(new[] { "Way" }, "planet_osm_line_way_idx"), "gist");

                    b.ToTable("planet_osm_line", (string)null);
                });

            modelBuilder.Entity("GISDevelopment.Models.PlanetOsmNode", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<int>("Lat")
                        .HasColumnType("integer")
                        .HasColumnName("lat");

                    b.Property<int>("Lon")
                        .HasColumnType("integer")
                        .HasColumnName("lon");

                    b.Property<string>("Tags")
                        .HasColumnType("jsonb")
                        .HasColumnName("tags");

                    b.HasKey("Id")
                        .HasName("planet_osm_nodes_pkey");

                    b.ToTable("planet_osm_nodes", (string)null);
                });

            modelBuilder.Entity("GISDevelopment.Models.PlanetOsmPoint", b =>
                {
                    b.Property<string>("Access")
                        .HasColumnType("text")
                        .HasColumnName("access");

                    b.Property<string>("AddrHousename")
                        .HasColumnType("text")
                        .HasColumnName("addr:housename");

                    b.Property<string>("AddrHousenumber")
                        .HasColumnType("text")
                        .HasColumnName("addr:housenumber");

                    b.Property<string>("AddrInterpolation")
                        .HasColumnType("text")
                        .HasColumnName("addr:interpolation");

                    b.Property<string>("AdminLevel")
                        .HasColumnType("text")
                        .HasColumnName("admin_level");

                    b.Property<string>("Aerialway")
                        .HasColumnType("text")
                        .HasColumnName("aerialway");

                    b.Property<string>("Aeroway")
                        .HasColumnType("text")
                        .HasColumnName("aeroway");

                    b.Property<string>("Amenity")
                        .HasColumnType("text")
                        .HasColumnName("amenity");

                    b.Property<string>("Area")
                        .HasColumnType("text")
                        .HasColumnName("area");

                    b.Property<string>("Barrier")
                        .HasColumnType("text")
                        .HasColumnName("barrier");

                    b.Property<string>("Bicycle")
                        .HasColumnType("text")
                        .HasColumnName("bicycle");

                    b.Property<string>("Boundary")
                        .HasColumnType("text")
                        .HasColumnName("boundary");

                    b.Property<string>("Brand")
                        .HasColumnType("text")
                        .HasColumnName("brand");

                    b.Property<string>("Bridge")
                        .HasColumnType("text")
                        .HasColumnName("bridge");

                    b.Property<string>("Building")
                        .HasColumnType("text")
                        .HasColumnName("building");

                    b.Property<string>("Capital")
                        .HasColumnType("text")
                        .HasColumnName("capital");

                    b.Property<string>("Construction")
                        .HasColumnType("text")
                        .HasColumnName("construction");

                    b.Property<string>("Covered")
                        .HasColumnType("text")
                        .HasColumnName("covered");

                    b.Property<string>("Culvert")
                        .HasColumnType("text")
                        .HasColumnName("culvert");

                    b.Property<string>("Cutting")
                        .HasColumnType("text")
                        .HasColumnName("cutting");

                    b.Property<string>("Denomination")
                        .HasColumnType("text")
                        .HasColumnName("denomination");

                    b.Property<string>("Disused")
                        .HasColumnType("text")
                        .HasColumnName("disused");

                    b.Property<string>("Ele")
                        .HasColumnType("text")
                        .HasColumnName("ele");

                    b.Property<string>("Embankment")
                        .HasColumnType("text")
                        .HasColumnName("embankment");

                    b.Property<string>("Foot")
                        .HasColumnType("text")
                        .HasColumnName("foot");

                    b.Property<string>("GeneratorSource")
                        .HasColumnType("text")
                        .HasColumnName("generator:source");

                    b.Property<string>("Harbour")
                        .HasColumnType("text")
                        .HasColumnName("harbour");

                    b.Property<string>("Highway")
                        .HasColumnType("text")
                        .HasColumnName("highway");

                    b.Property<string>("Historic")
                        .HasColumnType("text")
                        .HasColumnName("historic");

                    b.Property<string>("Horse")
                        .HasColumnType("text")
                        .HasColumnName("horse");

                    b.Property<string>("Intermittent")
                        .HasColumnType("text")
                        .HasColumnName("intermittent");

                    b.Property<string>("Junction")
                        .HasColumnType("text")
                        .HasColumnName("junction");

                    b.Property<string>("Landuse")
                        .HasColumnType("text")
                        .HasColumnName("landuse");

                    b.Property<string>("Layer")
                        .HasColumnType("text")
                        .HasColumnName("layer");

                    b.Property<string>("Leisure")
                        .HasColumnType("text")
                        .HasColumnName("leisure");

                    b.Property<string>("Lock")
                        .HasColumnType("text")
                        .HasColumnName("lock");

                    b.Property<string>("ManMade")
                        .HasColumnType("text")
                        .HasColumnName("man_made");

                    b.Property<string>("Military")
                        .HasColumnType("text")
                        .HasColumnName("military");

                    b.Property<string>("Motorcar")
                        .HasColumnType("text")
                        .HasColumnName("motorcar");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Natural")
                        .HasColumnType("text")
                        .HasColumnName("natural");

                    b.Property<string>("Office")
                        .HasColumnType("text")
                        .HasColumnName("office");

                    b.Property<string>("Oneway")
                        .HasColumnType("text")
                        .HasColumnName("oneway");

                    b.Property<string>("Operator")
                        .HasColumnType("text")
                        .HasColumnName("operator");

                    b.Property<long?>("OsmId")
                        .HasColumnType("bigint")
                        .HasColumnName("osm_id");

                    b.Property<string>("Place")
                        .HasColumnType("text")
                        .HasColumnName("place");

                    b.Property<string>("Population")
                        .HasColumnType("text")
                        .HasColumnName("population");

                    b.Property<string>("Power")
                        .HasColumnType("text")
                        .HasColumnName("power");

                    b.Property<string>("PowerSource")
                        .HasColumnType("text")
                        .HasColumnName("power_source");

                    b.Property<string>("PublicTransport")
                        .HasColumnType("text")
                        .HasColumnName("public_transport");

                    b.Property<string>("Railway")
                        .HasColumnType("text")
                        .HasColumnName("railway");

                    b.Property<string>("Ref")
                        .HasColumnType("text")
                        .HasColumnName("ref");

                    b.Property<string>("Religion")
                        .HasColumnType("text")
                        .HasColumnName("religion");

                    b.Property<string>("Route")
                        .HasColumnType("text")
                        .HasColumnName("route");

                    b.Property<string>("Service")
                        .HasColumnType("text")
                        .HasColumnName("service");

                    b.Property<string>("Shop")
                        .HasColumnType("text")
                        .HasColumnName("shop");

                    b.Property<string>("Sport")
                        .HasColumnType("text")
                        .HasColumnName("sport");

                    b.Property<string>("Surface")
                        .HasColumnType("text")
                        .HasColumnName("surface");

                    b.Property<Dictionary<string, string>>("Tags")
                        .HasColumnType("hstore")
                        .HasColumnName("tags");

                    b.Property<string>("Toll")
                        .HasColumnType("text")
                        .HasColumnName("toll");

                    b.Property<string>("Tourism")
                        .HasColumnType("text")
                        .HasColumnName("tourism");

                    b.Property<string>("TowerType")
                        .HasColumnType("text")
                        .HasColumnName("tower:type");

                    b.Property<string>("Tunnel")
                        .HasColumnType("text")
                        .HasColumnName("tunnel");

                    b.Property<string>("Water")
                        .HasColumnType("text")
                        .HasColumnName("water");

                    b.Property<string>("Waterway")
                        .HasColumnType("text")
                        .HasColumnName("waterway");

                    b.Property<Point>("Way")
                        .HasColumnType("geometry(Point,3857)")
                        .HasColumnName("way");

                    b.Property<string>("Wetland")
                        .HasColumnType("text")
                        .HasColumnName("wetland");

                    b.Property<string>("Width")
                        .HasColumnType("text")
                        .HasColumnName("width");

                    b.Property<string>("Wood")
                        .HasColumnType("text")
                        .HasColumnName("wood");

                    b.Property<int?>("ZOrder")
                        .HasColumnType("integer")
                        .HasColumnName("z_order");

                    b.HasIndex(new[] { "OsmId" }, "planet_osm_point_osm_id_idx");

                    b.HasIndex(new[] { "Way" }, "planet_osm_point_way_idx");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex(new[] { "Way" }, "planet_osm_point_way_idx"), "gist");

                    b.ToTable("planet_osm_point", (string)null);
                });

            modelBuilder.Entity("GISDevelopment.Models.PlanetOsmPolygon", b =>
                {
                    b.Property<string>("Access")
                        .HasColumnType("text")
                        .HasColumnName("access");

                    b.Property<string>("AddrHousename")
                        .HasColumnType("text")
                        .HasColumnName("addr:housename");

                    b.Property<string>("AddrHousenumber")
                        .HasColumnType("text")
                        .HasColumnName("addr:housenumber");

                    b.Property<string>("AddrInterpolation")
                        .HasColumnType("text")
                        .HasColumnName("addr:interpolation");

                    b.Property<string>("AdminLevel")
                        .HasColumnType("text")
                        .HasColumnName("admin_level");

                    b.Property<string>("Aerialway")
                        .HasColumnType("text")
                        .HasColumnName("aerialway");

                    b.Property<string>("Aeroway")
                        .HasColumnType("text")
                        .HasColumnName("aeroway");

                    b.Property<string>("Amenity")
                        .HasColumnType("text")
                        .HasColumnName("amenity");

                    b.Property<string>("Area")
                        .HasColumnType("text")
                        .HasColumnName("area");

                    b.Property<string>("Barrier")
                        .HasColumnType("text")
                        .HasColumnName("barrier");

                    b.Property<string>("Bicycle")
                        .HasColumnType("text")
                        .HasColumnName("bicycle");

                    b.Property<string>("Boundary")
                        .HasColumnType("text")
                        .HasColumnName("boundary");

                    b.Property<string>("Brand")
                        .HasColumnType("text")
                        .HasColumnName("brand");

                    b.Property<string>("Bridge")
                        .HasColumnType("text")
                        .HasColumnName("bridge");

                    b.Property<string>("Building")
                        .HasColumnType("text")
                        .HasColumnName("building");

                    b.Property<string>("Construction")
                        .HasColumnType("text")
                        .HasColumnName("construction");

                    b.Property<string>("Covered")
                        .HasColumnType("text")
                        .HasColumnName("covered");

                    b.Property<string>("Culvert")
                        .HasColumnType("text")
                        .HasColumnName("culvert");

                    b.Property<string>("Cutting")
                        .HasColumnType("text")
                        .HasColumnName("cutting");

                    b.Property<string>("Denomination")
                        .HasColumnType("text")
                        .HasColumnName("denomination");

                    b.Property<string>("Disused")
                        .HasColumnType("text")
                        .HasColumnName("disused");

                    b.Property<string>("Embankment")
                        .HasColumnType("text")
                        .HasColumnName("embankment");

                    b.Property<string>("Foot")
                        .HasColumnType("text")
                        .HasColumnName("foot");

                    b.Property<string>("GeneratorSource")
                        .HasColumnType("text")
                        .HasColumnName("generator:source");

                    b.Property<string>("Harbour")
                        .HasColumnType("text")
                        .HasColumnName("harbour");

                    b.Property<string>("Highway")
                        .HasColumnType("text")
                        .HasColumnName("highway");

                    b.Property<string>("Historic")
                        .HasColumnType("text")
                        .HasColumnName("historic");

                    b.Property<string>("Horse")
                        .HasColumnType("text")
                        .HasColumnName("horse");

                    b.Property<string>("Intermittent")
                        .HasColumnType("text")
                        .HasColumnName("intermittent");

                    b.Property<string>("Junction")
                        .HasColumnType("text")
                        .HasColumnName("junction");

                    b.Property<string>("Landuse")
                        .HasColumnType("text")
                        .HasColumnName("landuse");

                    b.Property<string>("Layer")
                        .HasColumnType("text")
                        .HasColumnName("layer");

                    b.Property<string>("Leisure")
                        .HasColumnType("text")
                        .HasColumnName("leisure");

                    b.Property<string>("Lock")
                        .HasColumnType("text")
                        .HasColumnName("lock");

                    b.Property<string>("ManMade")
                        .HasColumnType("text")
                        .HasColumnName("man_made");

                    b.Property<string>("Military")
                        .HasColumnType("text")
                        .HasColumnName("military");

                    b.Property<string>("Motorcar")
                        .HasColumnType("text")
                        .HasColumnName("motorcar");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Natural")
                        .HasColumnType("text")
                        .HasColumnName("natural");

                    b.Property<string>("Office")
                        .HasColumnType("text")
                        .HasColumnName("office");

                    b.Property<string>("Oneway")
                        .HasColumnType("text")
                        .HasColumnName("oneway");

                    b.Property<string>("Operator")
                        .HasColumnType("text")
                        .HasColumnName("operator");

                    b.Property<long?>("OsmId")
                        .HasColumnType("bigint")
                        .HasColumnName("osm_id");

                    b.Property<string>("Place")
                        .HasColumnType("text")
                        .HasColumnName("place");

                    b.Property<string>("Population")
                        .HasColumnType("text")
                        .HasColumnName("population");

                    b.Property<string>("Power")
                        .HasColumnType("text")
                        .HasColumnName("power");

                    b.Property<string>("PowerSource")
                        .HasColumnType("text")
                        .HasColumnName("power_source");

                    b.Property<string>("PublicTransport")
                        .HasColumnType("text")
                        .HasColumnName("public_transport");

                    b.Property<string>("Railway")
                        .HasColumnType("text")
                        .HasColumnName("railway");

                    b.Property<string>("Ref")
                        .HasColumnType("text")
                        .HasColumnName("ref");

                    b.Property<string>("Religion")
                        .HasColumnType("text")
                        .HasColumnName("religion");

                    b.Property<string>("Route")
                        .HasColumnType("text")
                        .HasColumnName("route");

                    b.Property<string>("Service")
                        .HasColumnType("text")
                        .HasColumnName("service");

                    b.Property<string>("Shop")
                        .HasColumnType("text")
                        .HasColumnName("shop");

                    b.Property<string>("Sport")
                        .HasColumnType("text")
                        .HasColumnName("sport");

                    b.Property<string>("Surface")
                        .HasColumnType("text")
                        .HasColumnName("surface");

                    b.Property<Dictionary<string, string>>("Tags")
                        .HasColumnType("hstore")
                        .HasColumnName("tags");

                    b.Property<string>("Toll")
                        .HasColumnType("text")
                        .HasColumnName("toll");

                    b.Property<string>("Tourism")
                        .HasColumnType("text")
                        .HasColumnName("tourism");

                    b.Property<string>("TowerType")
                        .HasColumnType("text")
                        .HasColumnName("tower:type");

                    b.Property<string>("Tracktype")
                        .HasColumnType("text")
                        .HasColumnName("tracktype");

                    b.Property<string>("Tunnel")
                        .HasColumnType("text")
                        .HasColumnName("tunnel");

                    b.Property<string>("Water")
                        .HasColumnType("text")
                        .HasColumnName("water");

                    b.Property<string>("Waterway")
                        .HasColumnType("text")
                        .HasColumnName("waterway");

                    b.Property<Geometry>("Way")
                        .HasColumnType("geometry(Geometry,3857)")
                        .HasColumnName("way");

                    b.Property<float?>("WayArea")
                        .HasColumnType("real")
                        .HasColumnName("way_area");

                    b.Property<string>("Wetland")
                        .HasColumnType("text")
                        .HasColumnName("wetland");

                    b.Property<string>("Width")
                        .HasColumnType("text")
                        .HasColumnName("width");

                    b.Property<string>("Wood")
                        .HasColumnType("text")
                        .HasColumnName("wood");

                    b.Property<int?>("ZOrder")
                        .HasColumnType("integer")
                        .HasColumnName("z_order");

                    b.HasIndex(new[] { "OsmId" }, "planet_osm_polygon_osm_id_idx");

                    b.HasIndex(new[] { "Way" }, "planet_osm_polygon_way_idx");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex(new[] { "Way" }, "planet_osm_polygon_way_idx"), "gist");

                    b.ToTable("planet_osm_polygon", (string)null);
                });

            modelBuilder.Entity("GISDevelopment.Models.PlanetOsmRel", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Members")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("members");

                    b.Property<string>("Tags")
                        .HasColumnType("jsonb")
                        .HasColumnName("tags");

                    b.HasKey("Id")
                        .HasName("planet_osm_rels_pkey");

                    b.ToTable("planet_osm_rels", (string)null);
                });

            modelBuilder.Entity("GISDevelopment.Models.PlanetOsmRoad", b =>
                {
                    b.Property<string>("Access")
                        .HasColumnType("text")
                        .HasColumnName("access");

                    b.Property<string>("AddrHousename")
                        .HasColumnType("text")
                        .HasColumnName("addr:housename");

                    b.Property<string>("AddrHousenumber")
                        .HasColumnType("text")
                        .HasColumnName("addr:housenumber");

                    b.Property<string>("AddrInterpolation")
                        .HasColumnType("text")
                        .HasColumnName("addr:interpolation");

                    b.Property<string>("AdminLevel")
                        .HasColumnType("text")
                        .HasColumnName("admin_level");

                    b.Property<string>("Aerialway")
                        .HasColumnType("text")
                        .HasColumnName("aerialway");

                    b.Property<string>("Aeroway")
                        .HasColumnType("text")
                        .HasColumnName("aeroway");

                    b.Property<string>("Amenity")
                        .HasColumnType("text")
                        .HasColumnName("amenity");

                    b.Property<string>("Area")
                        .HasColumnType("text")
                        .HasColumnName("area");

                    b.Property<string>("Barrier")
                        .HasColumnType("text")
                        .HasColumnName("barrier");

                    b.Property<string>("Bicycle")
                        .HasColumnType("text")
                        .HasColumnName("bicycle");

                    b.Property<string>("Boundary")
                        .HasColumnType("text")
                        .HasColumnName("boundary");

                    b.Property<string>("Brand")
                        .HasColumnType("text")
                        .HasColumnName("brand");

                    b.Property<string>("Bridge")
                        .HasColumnType("text")
                        .HasColumnName("bridge");

                    b.Property<string>("Building")
                        .HasColumnType("text")
                        .HasColumnName("building");

                    b.Property<string>("Construction")
                        .HasColumnType("text")
                        .HasColumnName("construction");

                    b.Property<string>("Covered")
                        .HasColumnType("text")
                        .HasColumnName("covered");

                    b.Property<string>("Culvert")
                        .HasColumnType("text")
                        .HasColumnName("culvert");

                    b.Property<string>("Cutting")
                        .HasColumnType("text")
                        .HasColumnName("cutting");

                    b.Property<string>("Denomination")
                        .HasColumnType("text")
                        .HasColumnName("denomination");

                    b.Property<string>("Disused")
                        .HasColumnType("text")
                        .HasColumnName("disused");

                    b.Property<string>("Embankment")
                        .HasColumnType("text")
                        .HasColumnName("embankment");

                    b.Property<string>("Foot")
                        .HasColumnType("text")
                        .HasColumnName("foot");

                    b.Property<string>("GeneratorSource")
                        .HasColumnType("text")
                        .HasColumnName("generator:source");

                    b.Property<string>("Harbour")
                        .HasColumnType("text")
                        .HasColumnName("harbour");

                    b.Property<string>("Highway")
                        .HasColumnType("text")
                        .HasColumnName("highway");

                    b.Property<string>("Historic")
                        .HasColumnType("text")
                        .HasColumnName("historic");

                    b.Property<string>("Horse")
                        .HasColumnType("text")
                        .HasColumnName("horse");

                    b.Property<string>("Intermittent")
                        .HasColumnType("text")
                        .HasColumnName("intermittent");

                    b.Property<string>("Junction")
                        .HasColumnType("text")
                        .HasColumnName("junction");

                    b.Property<string>("Landuse")
                        .HasColumnType("text")
                        .HasColumnName("landuse");

                    b.Property<string>("Layer")
                        .HasColumnType("text")
                        .HasColumnName("layer");

                    b.Property<string>("Leisure")
                        .HasColumnType("text")
                        .HasColumnName("leisure");

                    b.Property<string>("Lock")
                        .HasColumnType("text")
                        .HasColumnName("lock");

                    b.Property<string>("ManMade")
                        .HasColumnType("text")
                        .HasColumnName("man_made");

                    b.Property<string>("Military")
                        .HasColumnType("text")
                        .HasColumnName("military");

                    b.Property<string>("Motorcar")
                        .HasColumnType("text")
                        .HasColumnName("motorcar");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Natural")
                        .HasColumnType("text")
                        .HasColumnName("natural");

                    b.Property<string>("Office")
                        .HasColumnType("text")
                        .HasColumnName("office");

                    b.Property<string>("Oneway")
                        .HasColumnType("text")
                        .HasColumnName("oneway");

                    b.Property<string>("Operator")
                        .HasColumnType("text")
                        .HasColumnName("operator");

                    b.Property<long?>("OsmId")
                        .HasColumnType("bigint")
                        .HasColumnName("osm_id");

                    b.Property<string>("Place")
                        .HasColumnType("text")
                        .HasColumnName("place");

                    b.Property<string>("Population")
                        .HasColumnType("text")
                        .HasColumnName("population");

                    b.Property<string>("Power")
                        .HasColumnType("text")
                        .HasColumnName("power");

                    b.Property<string>("PowerSource")
                        .HasColumnType("text")
                        .HasColumnName("power_source");

                    b.Property<string>("PublicTransport")
                        .HasColumnType("text")
                        .HasColumnName("public_transport");

                    b.Property<string>("Railway")
                        .HasColumnType("text")
                        .HasColumnName("railway");

                    b.Property<string>("Ref")
                        .HasColumnType("text")
                        .HasColumnName("ref");

                    b.Property<string>("Religion")
                        .HasColumnType("text")
                        .HasColumnName("religion");

                    b.Property<string>("Route")
                        .HasColumnType("text")
                        .HasColumnName("route");

                    b.Property<string>("Service")
                        .HasColumnType("text")
                        .HasColumnName("service");

                    b.Property<string>("Shop")
                        .HasColumnType("text")
                        .HasColumnName("shop");

                    b.Property<string>("Sport")
                        .HasColumnType("text")
                        .HasColumnName("sport");

                    b.Property<string>("Surface")
                        .HasColumnType("text")
                        .HasColumnName("surface");

                    b.Property<Dictionary<string, string>>("Tags")
                        .HasColumnType("hstore")
                        .HasColumnName("tags");

                    b.Property<string>("Toll")
                        .HasColumnType("text")
                        .HasColumnName("toll");

                    b.Property<string>("Tourism")
                        .HasColumnType("text")
                        .HasColumnName("tourism");

                    b.Property<string>("TowerType")
                        .HasColumnType("text")
                        .HasColumnName("tower:type");

                    b.Property<string>("Tracktype")
                        .HasColumnType("text")
                        .HasColumnName("tracktype");

                    b.Property<string>("Tunnel")
                        .HasColumnType("text")
                        .HasColumnName("tunnel");

                    b.Property<string>("Water")
                        .HasColumnType("text")
                        .HasColumnName("water");

                    b.Property<string>("Waterway")
                        .HasColumnType("text")
                        .HasColumnName("waterway");

                    b.Property<LineString>("Way")
                        .HasColumnType("geometry(LineString,3857)")
                        .HasColumnName("way");

                    b.Property<float?>("WayArea")
                        .HasColumnType("real")
                        .HasColumnName("way_area");

                    b.Property<string>("Wetland")
                        .HasColumnType("text")
                        .HasColumnName("wetland");

                    b.Property<string>("Width")
                        .HasColumnType("text")
                        .HasColumnName("width");

                    b.Property<string>("Wood")
                        .HasColumnType("text")
                        .HasColumnName("wood");

                    b.Property<int?>("ZOrder")
                        .HasColumnType("integer")
                        .HasColumnName("z_order");

                    b.HasIndex(new[] { "OsmId" }, "planet_osm_roads_osm_id_idx");

                    b.HasIndex(new[] { "Way" }, "planet_osm_roads_way_idx");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex(new[] { "Way" }, "planet_osm_roads_way_idx"), "gist");

                    b.ToTable("planet_osm_roads", (string)null);
                });

            modelBuilder.Entity("GISDevelopment.Models.PlanetOsmWay", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.PrimitiveCollection<List<long>>("Nodes")
                        .IsRequired()
                        .HasColumnType("bigint[]")
                        .HasColumnName("nodes");

                    b.Property<string>("Tags")
                        .HasColumnType("jsonb")
                        .HasColumnName("tags");

                    b.HasKey("Id")
                        .HasName("planet_osm_ways_pkey");

                    b.ToTable("planet_osm_ways", (string)null);
                });

            modelBuilder.Entity("GISDevelopment.Models.Restaurant", b =>
                {
                    b.Property<long>("OsmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("osm_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("OsmId"));

                    b.Property<string>("Access")
                        .HasColumnType("text")
                        .HasColumnName("access");

                    b.Property<string>("AddrHousename")
                        .HasColumnType("text")
                        .HasColumnName("addr:housename");

                    b.Property<string>("AddrHousenumber")
                        .HasColumnType("text")
                        .HasColumnName("addr:housenumber");

                    b.Property<string>("AddrInterpolation")
                        .HasColumnType("text")
                        .HasColumnName("addr:interpolation");

                    b.Property<string>("AdminLevel")
                        .HasColumnType("text")
                        .HasColumnName("admin_level");

                    b.Property<string>("Aerialway")
                        .HasColumnType("text")
                        .HasColumnName("aerialway");

                    b.Property<string>("Aeroway")
                        .HasColumnType("text")
                        .HasColumnName("aeroway");

                    b.Property<string>("Amenity")
                        .HasColumnType("text")
                        .HasColumnName("amenity");

                    b.Property<string>("Area")
                        .HasColumnType("text")
                        .HasColumnName("area");

                    b.Property<string>("Barrier")
                        .HasColumnType("text")
                        .HasColumnName("barrier");

                    b.Property<string>("Bicycle")
                        .HasColumnType("text")
                        .HasColumnName("bicycle");

                    b.Property<string>("Boundary")
                        .HasColumnType("text")
                        .HasColumnName("boundary");

                    b.Property<string>("Brand")
                        .HasColumnType("text")
                        .HasColumnName("brand");

                    b.Property<string>("Bridge")
                        .HasColumnType("text")
                        .HasColumnName("bridge");

                    b.Property<string>("Building")
                        .HasColumnType("text")
                        .HasColumnName("building");

                    b.Property<string>("Capital")
                        .HasColumnType("text")
                        .HasColumnName("capital");

                    b.Property<string>("Construction")
                        .HasColumnType("text")
                        .HasColumnName("construction");

                    b.Property<string>("Covered")
                        .HasColumnType("text")
                        .HasColumnName("covered");

                    b.Property<string>("Culvert")
                        .HasColumnType("text")
                        .HasColumnName("culvert");

                    b.Property<string>("Cutting")
                        .HasColumnType("text")
                        .HasColumnName("cutting");

                    b.Property<string>("Denomination")
                        .HasColumnType("text")
                        .HasColumnName("denomination");

                    b.Property<string>("Disused")
                        .HasColumnType("text")
                        .HasColumnName("disused");

                    b.Property<string>("Ele")
                        .HasColumnType("text")
                        .HasColumnName("ele");

                    b.Property<string>("Embankment")
                        .HasColumnType("text")
                        .HasColumnName("embankment");

                    b.Property<string>("Foot")
                        .HasColumnType("text")
                        .HasColumnName("foot");

                    b.Property<string>("GeneratorSource")
                        .HasColumnType("text")
                        .HasColumnName("generator:source");

                    b.Property<string>("Harbour")
                        .HasColumnType("text")
                        .HasColumnName("harbour");

                    b.Property<string>("Highway")
                        .HasColumnType("text")
                        .HasColumnName("highway");

                    b.Property<string>("Historic")
                        .HasColumnType("text")
                        .HasColumnName("historic");

                    b.Property<string>("Horse")
                        .HasColumnType("text")
                        .HasColumnName("horse");

                    b.Property<string>("Intermittent")
                        .HasColumnType("text")
                        .HasColumnName("intermittent");

                    b.Property<string>("Junction")
                        .HasColumnType("text")
                        .HasColumnName("junction");

                    b.Property<string>("Landuse")
                        .HasColumnType("text")
                        .HasColumnName("landuse");

                    b.Property<string>("Layer")
                        .HasColumnType("text")
                        .HasColumnName("layer");

                    b.Property<string>("Leisure")
                        .HasColumnType("text")
                        .HasColumnName("leisure");

                    b.Property<string>("Lock")
                        .HasColumnType("text")
                        .HasColumnName("lock");

                    b.Property<string>("ManMade")
                        .HasColumnType("text")
                        .HasColumnName("man_made");

                    b.Property<string>("Military")
                        .HasColumnType("text")
                        .HasColumnName("military");

                    b.Property<string>("Motorcar")
                        .HasColumnType("text")
                        .HasColumnName("motorcar");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Natural")
                        .HasColumnType("text")
                        .HasColumnName("natural");

                    b.Property<string>("Office")
                        .HasColumnType("text")
                        .HasColumnName("office");

                    b.Property<string>("Oneway")
                        .HasColumnType("text")
                        .HasColumnName("oneway");

                    b.Property<string>("Operator")
                        .HasColumnType("text")
                        .HasColumnName("operator");

                    b.Property<string>("Place")
                        .HasColumnType("text")
                        .HasColumnName("place");

                    b.Property<string>("Population")
                        .HasColumnType("text")
                        .HasColumnName("population");

                    b.Property<string>("Power")
                        .HasColumnType("text")
                        .HasColumnName("power");

                    b.Property<string>("PowerSource")
                        .HasColumnType("text")
                        .HasColumnName("power_source");

                    b.Property<string>("PublicTransport")
                        .HasColumnType("text")
                        .HasColumnName("public_transport");

                    b.Property<string>("Railway")
                        .HasColumnType("text")
                        .HasColumnName("railway");

                    b.Property<string>("Ref")
                        .HasColumnType("text")
                        .HasColumnName("ref");

                    b.Property<string>("Religion")
                        .HasColumnType("text")
                        .HasColumnName("religion");

                    b.Property<string>("Route")
                        .HasColumnType("text")
                        .HasColumnName("route");

                    b.Property<string>("Service")
                        .HasColumnType("text")
                        .HasColumnName("service");

                    b.Property<string>("Shop")
                        .HasColumnType("text")
                        .HasColumnName("shop");

                    b.Property<string>("Sport")
                        .HasColumnType("text")
                        .HasColumnName("sport");

                    b.Property<string>("Surface")
                        .HasColumnType("text")
                        .HasColumnName("surface");

                    b.Property<Dictionary<string, string>>("Tags")
                        .HasColumnType("hstore")
                        .HasColumnName("tags");

                    b.Property<string>("Toll")
                        .HasColumnType("text")
                        .HasColumnName("toll");

                    b.Property<string>("Tourism")
                        .HasColumnType("text")
                        .HasColumnName("tourism");

                    b.Property<string>("TowerType")
                        .HasColumnType("text")
                        .HasColumnName("tower:type");

                    b.Property<string>("Tunnel")
                        .HasColumnType("text")
                        .HasColumnName("tunnel");

                    b.Property<string>("Water")
                        .HasColumnType("text")
                        .HasColumnName("water");

                    b.Property<string>("Waterway")
                        .HasColumnType("text")
                        .HasColumnName("waterway");

                    b.Property<Point>("Way")
                        .HasColumnType("geometry(Point,3857)")
                        .HasColumnName("way");

                    b.Property<string>("Wetland")
                        .HasColumnType("text")
                        .HasColumnName("wetland");

                    b.Property<string>("Width")
                        .HasColumnType("text")
                        .HasColumnName("width");

                    b.Property<string>("Wood")
                        .HasColumnType("text")
                        .HasColumnName("wood");

                    b.Property<int?>("ZOrder")
                        .HasColumnType("integer")
                        .HasColumnName("z_order");

                    b.HasKey("OsmId");

                    b.ToTable("Restaurant", (string)null);
                });

            modelBuilder.Entity("GISDevelopment.Models.Shop", b =>
                {
                    b.Property<long>("OsmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("osm_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("OsmId"));

                    b.Property<string>("Access")
                        .HasColumnType("text")
                        .HasColumnName("access");

                    b.Property<string>("AddrHousename")
                        .HasColumnType("text")
                        .HasColumnName("addr:housename");

                    b.Property<string>("AddrHousenumber")
                        .HasColumnType("text")
                        .HasColumnName("addr:housenumber");

                    b.Property<string>("AddrInterpolation")
                        .HasColumnType("text")
                        .HasColumnName("addr:interpolation");

                    b.Property<string>("AdminLevel")
                        .HasColumnType("text")
                        .HasColumnName("admin_level");

                    b.Property<string>("Aerialway")
                        .HasColumnType("text")
                        .HasColumnName("aerialway");

                    b.Property<string>("Aeroway")
                        .HasColumnType("text")
                        .HasColumnName("aeroway");

                    b.Property<string>("Amenity")
                        .HasColumnType("text")
                        .HasColumnName("amenity");

                    b.Property<string>("Area")
                        .HasColumnType("text")
                        .HasColumnName("area");

                    b.Property<string>("Barrier")
                        .HasColumnType("text")
                        .HasColumnName("barrier");

                    b.Property<string>("Bicycle")
                        .HasColumnType("text")
                        .HasColumnName("bicycle");

                    b.Property<string>("Boundary")
                        .HasColumnType("text")
                        .HasColumnName("boundary");

                    b.Property<string>("Brand")
                        .HasColumnType("text")
                        .HasColumnName("brand");

                    b.Property<string>("Bridge")
                        .HasColumnType("text")
                        .HasColumnName("bridge");

                    b.Property<string>("Building")
                        .HasColumnType("text")
                        .HasColumnName("building");

                    b.Property<string>("Capital")
                        .HasColumnType("text")
                        .HasColumnName("capital");

                    b.Property<string>("Construction")
                        .HasColumnType("text")
                        .HasColumnName("construction");

                    b.Property<string>("Covered")
                        .HasColumnType("text")
                        .HasColumnName("covered");

                    b.Property<string>("Culvert")
                        .HasColumnType("text")
                        .HasColumnName("culvert");

                    b.Property<string>("Cutting")
                        .HasColumnType("text")
                        .HasColumnName("cutting");

                    b.Property<string>("Denomination")
                        .HasColumnType("text")
                        .HasColumnName("denomination");

                    b.Property<string>("Disused")
                        .HasColumnType("text")
                        .HasColumnName("disused");

                    b.Property<string>("Ele")
                        .HasColumnType("text")
                        .HasColumnName("ele");

                    b.Property<string>("Embankment")
                        .HasColumnType("text")
                        .HasColumnName("embankment");

                    b.Property<string>("Foot")
                        .HasColumnType("text")
                        .HasColumnName("foot");

                    b.Property<string>("GeneratorSource")
                        .HasColumnType("text")
                        .HasColumnName("generator:source");

                    b.Property<string>("Harbour")
                        .HasColumnType("text")
                        .HasColumnName("harbour");

                    b.Property<string>("Highway")
                        .HasColumnType("text")
                        .HasColumnName("highway");

                    b.Property<string>("Historic")
                        .HasColumnType("text")
                        .HasColumnName("historic");

                    b.Property<string>("Horse")
                        .HasColumnType("text")
                        .HasColumnName("horse");

                    b.Property<string>("Intermittent")
                        .HasColumnType("text")
                        .HasColumnName("intermittent");

                    b.Property<string>("Junction")
                        .HasColumnType("text")
                        .HasColumnName("junction");

                    b.Property<string>("Landuse")
                        .HasColumnType("text")
                        .HasColumnName("landuse");

                    b.Property<string>("Layer")
                        .HasColumnType("text")
                        .HasColumnName("layer");

                    b.Property<string>("Leisure")
                        .HasColumnType("text")
                        .HasColumnName("leisure");

                    b.Property<string>("Lock")
                        .HasColumnType("text")
                        .HasColumnName("lock");

                    b.Property<string>("ManMade")
                        .HasColumnType("text")
                        .HasColumnName("man_made");

                    b.Property<string>("Military")
                        .HasColumnType("text")
                        .HasColumnName("military");

                    b.Property<string>("Motorcar")
                        .HasColumnType("text")
                        .HasColumnName("motorcar");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Natural")
                        .HasColumnType("text")
                        .HasColumnName("natural");

                    b.Property<string>("Office")
                        .HasColumnType("text")
                        .HasColumnName("office");

                    b.Property<string>("Oneway")
                        .HasColumnType("text")
                        .HasColumnName("oneway");

                    b.Property<string>("Operator")
                        .HasColumnType("text")
                        .HasColumnName("operator");

                    b.Property<string>("Place")
                        .HasColumnType("text")
                        .HasColumnName("place");

                    b.Property<string>("Population")
                        .HasColumnType("text")
                        .HasColumnName("population");

                    b.Property<string>("Power")
                        .HasColumnType("text")
                        .HasColumnName("power");

                    b.Property<string>("PowerSource")
                        .HasColumnType("text")
                        .HasColumnName("power_source");

                    b.Property<string>("PublicTransport")
                        .HasColumnType("text")
                        .HasColumnName("public_transport");

                    b.Property<string>("Railway")
                        .HasColumnType("text")
                        .HasColumnName("railway");

                    b.Property<string>("Ref")
                        .HasColumnType("text")
                        .HasColumnName("ref");

                    b.Property<string>("Religion")
                        .HasColumnType("text")
                        .HasColumnName("religion");

                    b.Property<string>("Route")
                        .HasColumnType("text")
                        .HasColumnName("route");

                    b.Property<string>("Service")
                        .HasColumnType("text")
                        .HasColumnName("service");

                    b.Property<string>("Shop1")
                        .HasColumnType("text")
                        .HasColumnName("shop");

                    b.Property<string>("Sport")
                        .HasColumnType("text")
                        .HasColumnName("sport");

                    b.Property<string>("Surface")
                        .HasColumnType("text")
                        .HasColumnName("surface");

                    b.Property<Dictionary<string, string>>("Tags")
                        .HasColumnType("hstore")
                        .HasColumnName("tags");

                    b.Property<string>("Toll")
                        .HasColumnType("text")
                        .HasColumnName("toll");

                    b.Property<string>("Tourism")
                        .HasColumnType("text")
                        .HasColumnName("tourism");

                    b.Property<string>("TowerType")
                        .HasColumnType("text")
                        .HasColumnName("tower:type");

                    b.Property<string>("Tunnel")
                        .HasColumnType("text")
                        .HasColumnName("tunnel");

                    b.Property<string>("Water")
                        .HasColumnType("text")
                        .HasColumnName("water");

                    b.Property<string>("Waterway")
                        .HasColumnType("text")
                        .HasColumnName("waterway");

                    b.Property<Point>("Way")
                        .HasColumnType("geometry(Point,3857)")
                        .HasColumnName("way");

                    b.Property<string>("Wetland")
                        .HasColumnType("text")
                        .HasColumnName("wetland");

                    b.Property<string>("Width")
                        .HasColumnType("text")
                        .HasColumnName("width");

                    b.Property<string>("Wood")
                        .HasColumnType("text")
                        .HasColumnName("wood");

                    b.Property<int?>("ZOrder")
                        .HasColumnType("integer")
                        .HasColumnName("z_order");

                    b.HasKey("OsmId");

                    b.ToTable("Shop", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
